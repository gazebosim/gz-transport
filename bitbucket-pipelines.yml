image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          # Install dependencies
          - apt-get update
          - apt-get -y install
            gnupg lsb-release
            cmake pkg-config cppcheck git build-essential curl
            libprotobuf-dev protobuf-compiler libprotoc-dev libzmq3-dev uuid-dev
            doxygen ruby-ronn libsqlite3-dev g++-8
          - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
          - gcc -v
          - g++ -v
          - gcov -v
          # lcov
          - git clone https://github.com/linux-test-project/lcov.git -b v1.14
          - cd lcov
          - make install
          - cd ..
          - echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" > /etc/apt/sources.list.d/gazebo-stable.list
          - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D2486D2DD83DB69272AFE98867170598AF249743
          - apt-get update
          - apt-get -y install
            libignition-cmake2-dev
            libignition-math6-dev
            libignition-msgs4-dev
            libignition-tools-dev
          # Ignition Transport
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make -j4
          - make test ARGS="-VV"
          - make coverage
          # Use a special version of codecov for handling gcc8 output.
          - bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/4678d212cce2078bbaaf5027af0c0dafaad6a095/codecov) -X gcovout -X gcov 2>/dev/null
          - make doc
          # - make codecheck
          - make install
          - cd ..
          # Build examples
          - cd example
          - mkdir build && cd build
          - cmake ..
          - make -j4
